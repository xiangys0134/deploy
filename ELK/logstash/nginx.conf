input {
  redis {
    data_type => "list"
    host => "192.168.10.105"
    port => 6380
    db => 0
    password =>"intel.com"
    timeout => 5
    key => "nginx-logs"
  }
}

filter {

    if [fields][log_source] == "nginx-logs" {
      grok {
          match => [
          "message", "(?<mydate>[0-9]{4}/[0-9]{2}/[0-9]{2}\s+[0-9]{2}:[0-9]{2}:[0-9]{2})\s+(?<errorlog>.*)",
          "message", "(?<remote_addr>[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+)\s+.*\s+.*\s+\[(?<mydate>[0-9]{2}.*)]\s+\"(?<type>[A-Z]+)\s+(?<request>\/.*)\s+HTTP/[0-9]\.[0-9]\"\s+(?<http_host>.*)\s+(?<status>[0-9]{3})\s+(?<request_length>[0-9]+)\s+(?<body_bytes_sent>[0-9]+)\s+\"(?<http_referer>.*)\"\s+\"(?<http_user_agent>.*)\"\s+(?<request_time>[0-9]+\.[0-9]+)\s+(?<upstream_response_time>.*)",
          "message", "(?<remote_addr>[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+)\s+.*\s+.*\s+\[(?<mydate>[0-9]{2}.*)]\s+\"(?<type>[A-Z]+)\s+(?<request>\/.*)\s+HTTP/[0-9]\.[0-9]\"\s+(?<http_host>[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+.*)\s+(?<status>[0-9]{3})\s+(?<request_length>[0-9]+)\s+(?<body_bytes_sent>[0-9]+)\s+\"(?<http_referer>.*)\"\s+\"(?<http_user_agent>.*)\"\s+(?<request_time>[0-9]+\.[0-9]+)\s+(?<upstream_response_time>[0-9]+\.[0-9]+)",
          "message", "(?<remote_addr>[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+)\s+.*\s+.*\s+\[(?<mydate>[0-9]{2}.*)]\s+\"(?<type>[A-Z]+)\s+(?<request>\/.*)\s+HTTP/[0-9]\.[0-9]\"\s+(?<http_host>[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+.*)\s+(?<status>[0-9]{3})\s+(?<request_length>[0-9]+)\s+(?<body_bytes_sent>[0-9]+)\s+\"(?<http_referer>.*)\"\s+\"(?<http_user_agent>.*)\"\s+(?<request_time>[0-9]+\.[0-9]+)\s+(?<upstream_response_time>.*)",
          "message", "(?<remote_addr>[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+)\s+.*\s+.*\s+\[(?<mydate>[0-9]{2}.*)]\s+\"(?<request>.*)\s+\-\s+(?<status>[0-9]{3})\s+(?<request_length>[0-9]+)\s+(?<body_bytes_sent>[0-9]+)\s+\"(?<http_referer>.*)\"\s+\"(?<http_user_agent>.*)\"\s+(?<request_time>[0-9]+\.[0-9]+)\s+(?<upstream_response_time>.*)"
          ]
          timeout_millis => 10000
          #remove_field => ["message"]
      }

      if !([tags] and "_grokparsefailure" in [tags]) {
          mutate {
              remove_field => ["message"]
              convert => {
                "status" => "integer"
                "body_bytes_sent" => "integer"
                "request_length" => "integer"
                "request_time" => "float"
                "upstream_response_time" => "float"
              }
          }
      }

      
      date {
        match => ["mydate", "dd/MMM/yyyy:HH:mm:ss Z","yyyy/MM/dd HH:mm:ss","ISO8601"]
        target => "@timestamp"
      }
    }
}

output {
    if [fields][log_source] == "nginx-logs" {
        elasticsearch {
            hosts => ["192.168.10.102:9200","192.168.10.103:9200","192.168.10.104:9200"]
            timeout => 5
            index => "nginx-%{+YYYY.MM.dd}"
        }
    }
# stdout {
# codec => rubydebug
# }
}

